# PostgreSQL Configuration for Health Tracker Application
# Optimized for Go application with connection pool (max 25 connections)

# Connection Settings
# Go app uses max 25 connections, so we set a buffer for admin connections
max_connections = 50
shared_buffers = 256MB
effective_cache_size = 1GB
maintenance_work_mem = 64MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
work_mem = 4MB
min_wal_size = 1GB
max_wal_size = 4GB

# Connection Pool Optimization
# Optimized for Go pgx connection pool settings
tcp_keepalives_idle = 600      # 10 minutes (matches DB_MAX_CONN_IDLE_MINUTES * 20)
tcp_keepalives_interval = 30   # 30 seconds
tcp_keepalives_count = 3       # 3 retries
statement_timeout = 30000      # 30 seconds (matches REQUEST_TIMEOUT_SECONDS)
idle_in_transaction_session_timeout = 1800000  # 30 minutes

# Logging Configuration
log_destination = 'stderr'
logging_collector = on
log_directory = '/var/log/postgresql'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_min_duration_statement = 1000
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 10MB

# Performance Settings
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track = all
pg_stat_statements.max = 10000

# Security Settings
ssl = off  # Enable in production with proper certificates
password_encryption = scram-sha-256

# Timezone
timezone = 'Asia/Tokyo'
log_timezone = 'Asia/Tokyo'

# Go Application Specific Settings
# Optimize for typical Go web application patterns
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min 